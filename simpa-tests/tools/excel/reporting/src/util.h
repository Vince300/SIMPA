/************************************************************************************************************************/
/* UTIL HEADER                                                                                                 */
/*                                                                                                                      */
/* AUTHORS : Yves GUERTE, 30 August 2004                                                                                */
/*                                                                                                                      */
/* CONTENT : Functions that handle history of reports									*/
/*                                                                                                                      */
/* 															*/
/*															*/
/************************************************************************************************************************/
#ifndef __UTIL__
#define __UTIL__


/**************************************************************************************************************************
* FUNCTION:     strp_cmp
*
* DESCRIPTION:  strcmp for 2 pointers to strings,
*               used by qsort in norm_cc_opt for sorting an array of strings
*
* INPUTS:       2 pointers to strings
*
* OUTPUTS:      
*
* RETURNS:      -1 / 0 / 1 in the same way than strcmp
***************************************************************************************************************************
* RESTRICTIONS:
* BUGS:
***************************************************************************************************************************
* AUTHOR:       Yves GUERTE
* DATE:         30 August 2004
***************************************************************************************************************************/
int strp_cmp(const void *s1, const void *s2);



/**************************************************************************************************************************
* FUNCTION:     my_malloc
*
* DESCRIPTION:  used to trace malloc calls
*
* INPUTS:       size_t
*
* OUTPUTS:      size required
*
* RETURNS:      void*
***************************************************************************************************************************
* RESTRICTIONS:
* BUGS:
***************************************************************************************************************************
* AUTHOR:       Yves GUERTE
* DATE:         29 Nvember 2004
***************************************************************************************************************************/
void *my_malloc(const size_t s, const int l);


/**************************************************************************************************************************
* FUNCTION:     basename
*
* DESCRIPTION:  like unix basename
*
* INPUTS:       pointer to string that is a path
*
* OUTPUTS:      
*
* RETURNS:      
***************************************************************************************************************************
* RESTRICTIONS:
* BUGS:
***************************************************************************************************************************
* AUTHOR:       Yves GUERTE
* DATE:         15 February 2005
***************************************************************************************************************************/
char *basename(const char *s);


/**************************************************************************************************************************
* FUNCTION:     same_dirname
*
* DESCRIPTION:  search if last dirname of 2 paths are the same
*
* INPUTS:       2 pointers to strings
*
* OUTPUTS:      
*
* RETURNS:      0 / 1 if true
***************************************************************************************************************************
* RESTRICTIONS:
* BUGS:
***************************************************************************************************************************
* AUTHOR:       Yves GUERTE
* DATE:         15 February 2005
***************************************************************************************************************************/
int same_dirname(const char *s1, const char *s2);

#endif
