<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0036)http://www.w3.org/XML/9707/scanner.l -->
<HTML><HEAD>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="MSHTML 6.00.2800.1400" name=GENERATOR></HEAD>
<BODY><PRE>%option 8bit nodefault


%{
/*
 * WARNING: This is not an XML 1.0 parser, but an experiment with an XML-like
 * language. See http://www.w3.org/XML/9707/XML-in-C
 *
 * Author: Bert Bos &lt;bert@w3.org&gt;
 * Created: 9 July 1997
 *
 * Copyright © 1997-2000 World Wide Web Consortium
 * See http://www.w3.org/Consortium/Legal/copyright-software-19980720.html
 */

#include &lt;stdio.h&gt;
#include &lt;ctype.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include "y.tab.h"

static int keep;			/* To store start condition */


static char* word(char *s)
{
  char *buf;
  int i, k;
  for (k = 0; isspace(s[k]) || s[k] == '&lt;'; k++) ;
  for (i = k; s[i] &amp;&amp; ! isspace(s[i]); i++) ;
  buf = malloc((i - k + 1) * sizeof(char));
  strncpy(buf, &amp;s[k], i - k);
  buf[i - k] = '\0';
  return buf;
}


%}


nl		(\r\n|\r|\n)
ws		[ \t\r\n]+
open		{nl}?"&lt;"
close		"&gt;"{nl}?
namestart	[A-Za-z\200-\377_]
namechar	[A-Za-z\200-\377_0-9.-]
esc		"&amp;#"[0-9]+";"|"&amp;#x"[0-9a-fA-F]+";"
name		{namestart}{namechar}*
data		([^&lt;\n&amp;]|\n[^&lt;&amp;]|\n{esc}|{esc})+
comment		{open}"!--"([^-]|"-"[^-])*"--"{close}
string		\"([^"&amp;]|{esc})*\"|\'([^'&amp;]|{esc})*\'
version		{open}"?XML-VERSION 1.0?"{close}
encoding	{open}"?XML-ENCODING"{ws}{name}{ws}?"?"{close}
attdef		{open}"?XML-ATT"

/*
 * The CONTENT mode is used for the content of elements, i.e.,
 * between the "&gt;" and "&lt;" of element tags.
 * The INITIAL mode is used outside the top level element
 * and inside markup.
 */

%s CONTENT


%%

&lt;INITIAL&gt;{ws}		{/* skip */}
&lt;INITIAL&gt;{version}	{return VERSION;}
&lt;INITIAL&gt;{encoding}	{yylval.s = word(yytext + 14); return ENCODING;}
&lt;INITIAL&gt;"/"		{return SLASH;}
&lt;INITIAL&gt;"="		{return EQ;}
&lt;INITIAL&gt;{close}	{BEGIN(CONTENT); return CLOSE;}
&lt;INITIAL&gt;{name}		{yylval.s = strdup(yytext); return NAME;}
&lt;INITIAL&gt;{string}	{yylval.s = strdup(yytext); return VALUE;}
&lt;INITIAL&gt;"?"{close}	{BEGIN(keep); return ENDDEF;}

{attdef}		{keep = YY_START; BEGIN(INITIAL); return ATTDEF;}
{open}{ws}?{name}	{BEGIN(INITIAL); yylval.s= word(yytext); return START;}
{open}{ws}?"/"		{BEGIN(INITIAL); return END;}
{comment}		{yylval.s = strdup(yytext); return COMMENT;}

&lt;CONTENT&gt;{data}		{yylval.s = strdup(yytext); return DATA;}

.			{fprintf(stderr, "!ERROR(%c)\n", *yytext);}
{nl}			{/* skip, must be an extra one at EOF */;}

</PRE></BODY></HTML>
