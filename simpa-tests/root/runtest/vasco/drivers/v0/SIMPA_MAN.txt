SIMPA - 10/05/2016

Checking environment and options
you don't know how it works ?
Usage : SIMPA driverClass [Options]

Options
> General
	--help | -h   : Show help
	--seed        : Use NN as seed for random generator
	--loadDotFile : load the specified dot file
	                 use with simpa.hit.drivers.mealy.FromDotMealyDriver
	--interactive : algorithms may ask user to choose a sequence, 
	                 a counter example or something else
	
> Inference Algorithm
	--tree             : Use tree inference (if available) instead of table
	--lm               : Use lm inference
	--noReset          : use noReset Algorithm
	--cutCombinatorial : use the combinatorial inference with cutting
	--combinatorial    : use the combinatorial inference
	--rivestSchapire   : use the RivestSchapire inference 
	                     (must be used with an other simpa.hit.learner)
	                     This option let you to run an inference algorithm 
	                     with resets on a driver without reset.
> Algorithm ZQ
	--stopatce         : Stop inference when a counter exemple is asked
	--maxcelength (20) : Maximal length of random walk for counter example 
	                      search
	--maxceresets (10) : Maximal number of random walks for counter example 
	                      search
	-I              () : Initial input symbols (a,b,c)
	-Z              () : Initial distinguishing sequences (a-b,a-c,a-c-b))
	-I=X               : Initial input symbols set to X
	
> Algorithm noReset (ICTSS2015)
	--stateBound      (0) : a bound of states number in infered automaton
	                        	n  → use n as bound of state number
	                        	0  → use exact states number 
	                        	     (need to know the automaton)
	                        	-n → use a random bound between the 
	                        	     number of states and the number of 
	                        	     states plus n (need to know 
	                        	     the automaton)
	--characterizationSeq : use the given charcacterization sequences
	                         usage : '--characterizationSeq a,b,c;b,c,d' 
	                         or '--characterizationSeq a,b,c 
	                             --characterizationSeq b,c,d'
	--noSpeedUp           : Don't use speedUp (deduction from trace based 
	                         on state incompatibilities). This is usefull 
	                         if you don't know the real state number but 
	                         only the bound.
> Algorithm EFSM
	--generic         : Use generic driver
	--scan            : Use scan driver
	--reuseop         : Reuse output parameter for non closed row
	--forcej48        : Force the use of J48 algorithm instead of M5P
	                     for numeric classes
	--weka            : Force the use of weka
	--supportmin (20) : Minimal support for relation (1-100)
	
> Random Mealy Generator
	--minstates    (5) : Min number of states for random automatas
	--maxstates    (5) : Max number of states for random automatas
	--mininputsym  (5) : Min number of input symbols for random automatas
	--maxinputsym  (5) : Max number of input symbols for random automatas
	--minoutputsym (5) : Min number of output symbols for random automatas
	                      That is the minimal number used for output symbol 
	                      generation but it is possible that less symbols 
	                      are used
	--maxoutputsym (5) : Max number of output symbols for random automatas
	--transitions (90) : percentage of loop in random automatas
	                      Some other loop may be generated randomly 
	                      so it's a minimal percentage
> Output
	--html     : Use HTML logger
	--text     : Use the text logger
	--openhtml : Open HTML log automatically
	--outdir ($PWD) : Where to save arff and graph files
	
> Stats
	--nbtest (1) : number of execution of the algorithm
	--makeGraph  : create graph based on csv files
	--simpa.hit.stats      : enable simpa.hit.stats mode
	                - save results to csv
	                - disable some feature
	                
> Test EFSM (should be group with random Generator ?)
	--minparameter (1) : Minimal number of parameter by symbol
	--maxparameter (1) : Maximal number of parameter by symbol
	--domainsize  (10) : Size of the parameter's domain
	--simpleguard (25) : % of simple guard by transitions
	--ndvguard    (25) : % of generating NDV by transitions
	--ndvmintrans  (1) : Minimum number of states before checking NDV value
	--ndvmaxtrans  (1) : Maximum number of states before checking NDV value
	
> Others...
	--urls : ??? TODO
	         	usage : '--urls url1;url2' or '--urls url1 --urls url2'
	--xss  : Detect XSS vulnerability

Ex: SIMPA simpa.hit.drivers.efsm.NSPKDriver --outdir mydir --text

